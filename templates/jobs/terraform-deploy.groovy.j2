job('{{ target_environment_name }}-terraform-deploy-{{ platform }}') {
  description('Deploy and automatically update Terraform environments upon repository changes on {{ platform }}')
  {% if vagrant is defined %}
    disabled(shouldDisable = true)
  {% endif %}
  parameters {
    choiceParam("action", ["apply", "destroy"],
            "Select if you want to apply changes to environments or destroy them.")
    stringParam("DEPLOY_ENV", "{{ target_environment_name }}",
            "Select which environment you wish to run terraform against")
    stringParam("REF_NAME", "{{ reference_name }}",
            "Select which branch or tag you wish to run terraform with")
  }
  scm {
    git {
      remote {
	url('https://github.com/alphagov/tsuru-terraform.git')
      }
      branch('${REF_NAME}')
      createTag(false)
    }
  }
  triggers {
   {% if poll_scm is defined %}
    scm("{{ poll_scm }}")
   {% endif %}
   {% if upstream_jobs is defined %}
   {% for upstream_job in upstream_jobs %}
    upstream('{{ upstream_job }}','SUCCESS')
   {% endfor %}
   {% endif %}
  }
  wrappers {
    colorizeOutput()
  }
  publishers {
  {% if vagrant is not defined %}
    mailer("{{ email_notification_address | default("the-multi-cloud-paas-team@digital.cabinet-office.gov.uk")}}")
  {% endif %}
    downstreamParameterized {
      trigger("{{ target_environment_name }}-ansible-deploy-{{ platform }}", 'SUCCESS', true) {
        currentBuild()
      }
    }
  }
  steps {
    shell('''#!/bin/bash
set -x

# Set-up ssh keys
mkdir -p {{ platform }}/ssh
cp ~/.ssh/* {{ platform }}/ssh

# Terraform
set -e
[[ ${action} == "destroy" ]] && extraopts="-force"
make prep

cd {{ platform }}
{% if platform == "gce" %}
cp ~/.account.json ./account.json
{% elif platform == "aws" %}
. ~/.aws_credentials
{% endif %}
terraform ${action} -var env=${DEPLOY_ENV} -input=false -state=${DEPLOY_ENV}-terraform.tfstate ${extraopts}
''')
  }
}
