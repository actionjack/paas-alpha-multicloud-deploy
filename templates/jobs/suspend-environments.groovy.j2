job('{{ job_name }}') {
  description('Suspends environments on {{ platform }}')
  {% if vagrant is defined %}
    disabled(shouldDisable = true)
  {% endif %}
  parameters {
    stringParam("EXCLUDE_ENV", "{{ exclude_env }}",
            "Space separated list of environments to exclude from shutdown")
  }
  scm {
    git {
      remote {
	    url('https://github.com/alphagov/tsuru-ansible.git')
      }
      branch('master')
      createTag(false)
    }
  }
  triggers {
   cron("{{ cron_suspend_time }}")
  }
  wrappers {
    colorizeOutput()
  }
  publishers {
  {% if vagrant is not defined %}
    mailer("{{ email_notification_address | default("the-multi-cloud-paas-team@digital.cabinet-office.gov.uk")}}")
  {% endif %}
  }
  steps {
    shell('''#!/bin/bash
# Disable output buffering to give realtime data
export PYTHONUNBUFFERED=1

# Assign SSH private key
eval $(ssh-agent) && ssh-add ~/.ssh/insecure-deployer

# Set up trap to clean up ssh-agent process in the event of any failure
set -e
trap "kill ${SSH_AGENT_PID}" EXIT

# Set up virtualenv
virtualenv .venv
. .venv/bin/activate

# Install python dependencies
pip install -Ur requirements.txt

# {{ platform|upper() }}
# Source {{ platform|upper() }} credentials
{% if platform == "aws" %}
. ~/.aws_credentials

# 1. Get environments
NAT_HOSTS=`./ec2.py --refresh-cache | grep \\"tag_Name_.*-tsuru-nat`
ENVIRONMENTS=`echo "$NAT_HOSTS" | sed 's/.\\+"tag_Name_// ; s/-tsuru-nat.*//'`
{% endif %}

{% if platform == "gce" %}
cp ~/.secrets.py secrets.py
cp ~/.gce_account.pem gce_account.pem

# 1. Get environments
NAT_HOSTS=`./gce.py | python -mjson.tool | grep \\"gce_name.*-tsuru-nat`
ENVIRONMENTS=`echo "$NAT_HOSTS" | sed 's/-tsuru-nat.*// ; s/.\\+"//'`
{% endif %}

# 2. Exclude
EXC=`echo "$EXCLUDE_ENV" | sed "s/ /|/g"`
ENV=`echo "$ENVIRONMENTS" | grep -Ev $EXC || echo`

# 3. Suspend
echo "Suspending environments on {{ platform }}:"
set +e
result=0
for environment in $ENV ; do
  echo "Suspending ${environment}..."
  make suspend-{{ platform }} DEPLOY_ENV=$environment
  result=`expr $? + $result`
done

exit $result
''')
  }
}

